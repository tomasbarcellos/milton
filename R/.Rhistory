test_data$min_school <- min_dist(coords=test_data[,c("lon","lat")],
points=school_points)
# Testing closest distance
test_data$min_school <- min_dist(coords=test_data[,c("lon","lat")],
points=school_points)
test_data$min_school
names(test_data)
#
ipvs_df <- read.csv("../data/IPVS/BaseIPVS2010.csv")
#
ipvs_df <- read.csv2("../data/IPVS/BaseIPVS2010.csv")
View(ipvs_df)
var_names <- read.csv("../data/IPVS/IPVS_Dicionario.txt")
var_names <- read.csv("../data/IPVS/IPVS_Dicionario.txt",sep="\t")
var_names <- read.csv("../data/IPVS/IPVS_Dicionario.txt",sep=":\t ")
var_names <- read.csv("../data/IPVS/IPVS_Dicionario.txt",sep=":\t")
var_names <- read.csv("../data/IPVS/IPVS_Dicionario.txt",sep=":\t ")
var_names <- read.table("../data/IPVS/IPVS_Dicionario.txt",
sep="\t ")
var_names <- read.table("../data/IPVS/IPVS_Dicionario.txt",
sep="\t ")
var_names <- read.table("../data/IPVS/IPVS_Dicionario.txt",
sep="\t")
var_names <- read.table("../data/IPVS/IPVS_Dicionario.txt",
sep=":\t")
var_names <- read.table("../data/IPVS/IPVS_Dicionario.txt",
sep="\t",header = t)
var_names <- read.table("../data/IPVS/IPVS_Dicionario.txt",
sep="\t",header = T)
var_names <- read.table("../data/IPVS/IPVS_Dicionario.txt",
sep="\t",header = F)
var_names <- read.table("../data/IPVS/IPVS_Dicionario.txt")
var_names <- read.table("../data/IPVS/IPVS_Dicionario.txt",sep = "\t")
var_names <- read.table("../data/IPVS/IPVS_Dicionario.txt",
sep = "\t",header=F)
var_names <- read.table("../data/IPVS/IPVS_Dicionario.txt",
sep = "\t", fileEncoding="UCS-2LE")
var_names
View(var_names)
var_names <- read.table("../data/IPVS/IPVS_Dicionario.txt",
sep = "\t", fileEncoding="UCS-2LE",
header=F)
var_names <- read.table("../data/IPVS/IPVS_Dicionario.txt",
sep = "\t", fileEncoding="UCS-2LE",
header=T)
names(ipvs_df) <- var_names$Descrição
View(ipvs_df)
#
ipvs_df <- read.csv2("../data/IPVS/BaseIPVS2010.csv")
var_names <- read.table("../data/IPVS/IPVS_Dicionario.txt",
sep = "\t", fileEncoding="UCS-2LE",
header=T)
names(ipvs_df) <- var_names$Descrição
names(ipvs_df)
names(test_data)
ipvs_inpd_df <- dplyr::left_join(test_data,ipvs_df,
by="`Código do setor censitário`")
View(test_data)
names(ipvs_df)
ipvs_inpd_df <- dplyr::left_join(test_data,ipvs_df,
by="CODSETOR")
names(ipvs_df)[9] <- "CODSETOR"
ipvs_inpd_df <- dplyr::left_join(test_data,ipvs_df,
by="CODSETOR")
class(test_data)
class(test_data$CODDIST)
class(test_data$CODSETOR)
test_data$CODSETOR <- test_data$CODSETOR %>% as.character %>% as.numeric
ipvs_inpd_df <- dplyr::left_join(test_data,ipvs_df,
by="CODSETOR")
View(ipvs_inpd_df)
names(ipvs_inpd_df)
levels(ipvs_inpd_df$`Grupo do IPVS`)
levels(ipvs_inpd_df$`Grupo do IPVS` %>% as.factor)
glm(JAP_EF ~ min_school + `Grupo do IPVS`, data=ipvs_inpd_df) # linear model: EF vs. AREA
glm(JAP_EF ~ min_school + `Grupo do IPVS`, data=ipvs_inpd_df) %>% summary
glm(JAP_EF ~ `Grupo do IPVS`,
data=ipvs_inpd_df) # linear model: EF vs. AREA
glm(JAP_EF ~ `Grupo do IPVS`,
data=ipvs_inpd_df) %>% summary
glm(JAP_EF ~ AREA + min_school + `Grupo do IPVS`,
data=ipvs_inpd_df) # linear model: EF vs. AREA
ipvs_inpd_df$AREA
View(ipvs_inpd_df)
glm(JAP_EF ~ AREA + min_school + `Grupo do IPVS` + ad_district,
data=ipvs_inpd_df) # linear model: EF vs. AREA
glm(JAP_EF ~ AREA + min_school + `Grupo do IPVS` + ad_district,
data=ipvs_inpd_df) %>% summary# linear model: EF vs. AREA
devtools::document("../../milton/")
devtools::document("../../milton/")
devtools::document("../../milton/")
devtools::document("../../milton/")
library(milton)
?milton::min_dist
?min_dist
?geo_part
?geopart
mdeaths
swiss
WWWusage
Titani
Titanic
quakes
plot(quakes$depth,quakes$mag)
plot(quakes$depth,quakes$stations)
Nile
JohnsonJohnson
JohnsonJohnson %>% class
library(magrittr)
JohnsonJohnson %>% class
JohnsonJohnson %>% as.data.frame
crimtab
cars
cars %>% head
sleep
sleep
sleep %>% class
head(sleep)
ggplot(data=sleep,aes(x=extra,color=group))+
geom_histogram()
library(ggplot2)
ggplot(data=sleep,aes(x=extra,color=group))+
geom_histogram()
ggplot(data=sleep,aes(x=extra,fill=group))+
geom_histogram()
ggplot(data=sleep,aes(x=extra,fill=group))+
geom_histogram(alpha=0.2)
ggplot(data=sleep,aes(x=extra,fill=group))+
geom_histogram(alpha=0.3)
ggplot(data=sleep,aes(x=extra,fill=group))+
geom_histogram(alpha=0.3,position = "dodge")
ggplot(data=sleep,aes(x=extra,color=group))+
geom_density()
?geom_density
library(ggplot2)
ggplot(data=sleep,aes(x=extra,color=group))+
geom_density()
ggplot(data=sleep,aes(x=extra,color=group))+
geom_bar()
ggplot(data=sleep,aes(x=extra,color=group))+
geom_jitter()
ggplot(data=sleep,aes(y=extra,color=group))+
geom_jitter()
ggplot(data=sleep,aes(y=extra,x=group))+
geom_jitter()
ggplot(data=sleep,aes(y=extra,x=group,color=group))+
geom_jitter()
ggplot(data=sleep,aes(y=extra,x=group,color=group))+
geom_errorbar()
ggplot(data=sleep,aes(y=extra,x=group,color=group))+
geom_point()
ggplot(data=iris,aes(y=Sepal.Lenght,x=Species,color=Species))+
geom_point()
ggplot(data=iris,aes(y=Sepal.Length,x=Species,color=Species))+
geom_point()
ggplot(data=iris,aes(y=Petal.Length,x=Species,color=Species))+
geom_point()
ggplot(data=iris,aes(y=Petal.Length,x=Species,color=Species))+
geom_boxplot()
ggplot(data=iris,aes(y=Petal.Length,x=Species,color=Species))+
geom_boxplot()+
ylav("Tamanho da Pétala")
ggplot(data=iris,aes(y=Petal.Length,x=Species,color=Species))+
geom_boxplot()+
ylab("Tamanho da Pétala")
ggplot(data=iris,aes(y=Petal.Length,x=Species,color=Species))+
geom_point()+
geom_boxplot()+
ylab("Tamanho da Pétala")
ggplot(data=iris,aes(y=Petal.Length,x=Species,color=Species))+
geom_point()+
geom_boxplot(alpha=0)+
ylab("Tamanho da Pétala")
ggplot(data=iris,aes(y=Petal.Length,x=Species,color=Species))+
geom_point(alha=0.5)+
geom_boxplot(alpha=0)+
ylab("Tamanho da Pétala")
ggplot(data=iris,aes(y=Petal.Length,x=Species,color=Species))+
geom_point(alpha=0.5)+
geom_boxplot(alpha=0)+
ylab("Tamanho da Pétala")
ggplot(data=iris,aes(y=Petal.Length,x=Species,color=Species))+
geom_point(alpha=0.4)+
geom_boxplot(alpha=0)+
ylab("Tamanho da Pétala")
ggplot(data=iris,aes(y=Petal.Length,x=Species,color=Species))+
geom_point(alpha=0.4)+
geom_boxplot(alpha=0)
ggplot(data=iris,aes(y=Petal.Length,x=Species,color=Species))+
geom_point(alpha=0.4)+
geom_boxplot(alpha=0)+
ylab("Tamanho da Pétala")+
theme_bw()
library(ggthemes)
ggplot(data=iris,aes(y=Petal.Length,x=Species,color=Species))+
geom_point(alpha=0.4)+
geom_boxplot(alpha=0)+
ylab("Tamanho da Pétala")+
theme_economist_white(gray_bg = F)
?geom_boxplot
library(magrittr)
library(ggthemes)
library(ggplot2)
source("sim_utils.R")
set.seed(2600)
n_birds <- 150
source('~/Dropbox/Meus arquivos/d-van/book/sim_utils.R')
source("sim_utils.R")
set.seed(2600)
n_birds <- 150
genes <- 100
n_islands <- 4
galapagos_birds <- purrr::map(.f = function(x) generate_pop(n_pop=n_birds,
n_genes = x),
.x = runif(n=n_islands,80,genes) %>% ceiling) %>%
unlist %>% matrix(nrow=n_birds,byrow=F) %>%
data.frame
names(galapagos_birds) <- c("A","B","C","D")
my_alpha <- 0.4
my_bins <- 80
galapagos_birds$A %>% sd
galapagos_birds$A %>% mean
galapagos_birds$A[1:30] %>% mean
galapagos_birds$A[1:30] %>% sd
n_birds <- 30
genes <- 100
n_islands <- 4
galapagos_birds <- purrr::map(.f = function(x) generate_pop(n_pop=n_birds,
n_genes = x),
.x = runif(n=n_islands,80,genes) %>% ceiling) %>%
unlist %>% matrix(nrow=n_birds,byrow=F) %>%
data.frame
galapagos_birds$A %>% sd
names(galapagos_birds) <- c("A","B","C","D")
galapagos_birds$A %>% sd
n_birds <- 150
genes <- 100
n_islands <- 4
galapagos_birds <- purrr::map(.f = function(x) generate_pop(n_pop=n_birds,
n_genes = x),
.x = runif(n=n_islands,80,genes) %>% ceiling) %>%
unlist %>% matrix(nrow=n_birds,byrow=F) %>%
data.frame
names(galapagos_birds) <- c("A","B","C","D")
my_alpha <- 0.4
my_bins <- 80
ggplot(data=galapagos_birds,aes(x=A))+
geom_histogram(alpha=my_alpha,bins = my_bins)+
geom_histogram(data=galapagos_birds,aes(x=B),fill="dark blue",
alpha=my_alpha,bins = my_bins)+
geom_histogram(data=galapagos_birds,aes(x=C),fill="dark red",
alpha=my_alpha,bins = my_bins)+
geom_histogram(data=galapagos_birds,aes(x=D),fill="dark green",
alpha=my_alpha,bins = my_bins)+
xlab("Beak size")+ylab("Count")+
ggtitle("Darwin's Finches",subtitle = "4 samples from 4 islands")+
theme_economist_white(gray_bg = F)
my_alpha <- 0.4
my_bins <- 80
ggplot(data=galapagos_birds,aes(x=A))+
geom_histogram(alpha=my_alpha,bins = my_bins)+
geom_histogram(data=galapagos_birds,aes(x=B),fill="dark blue",
alpha=my_alpha,bins = my_bins)+
xlab("Beak size")+ylab("Count")+
ggtitle("Darwin's Finches",subtitle = "Samples A and B")+
theme_economist_white(gray_bg = F)
a <- galapagos_birds$A
b <- galapagos_birds$B
sd_a <- sd(a)
sd_b <- sd(b)
mean_diff <- mean(a) - mean(b)
df_pool <- length(a) + length(b) - 2
se_pool  <- sqrt(((length(a) - 1) * sd_a^2 + (length(b) - 1) * sd_b^2)/
df_pool)
t   <- mean_diff / (se_pool * sqrt(1/length(a) + 1/length(b)))
p   <- 2*pt(-abs(t), df = df_pool)
result <- c(mean_diff, se_pool, t, p, mean(a), mean(b))
names(result) <- c("Difference of means", "Std Error", "t", "p-value","Mean A","Mean B")
result
t.test(a,b,var.equal = T)
t.test(a,b,var.equal = T) %>% summary()
t.test(a,b,var.equal = T) %>% summary
t.test(a,b,var.equal = T)
a <- galapagos_birds$A
b <- galapagos_birds$B
sd_a <- sd(a)
sd_b <- sd(b)
mean_diff <- mean(a) - mean(b)
df_pool <- length(a) + length(b) - 2
sd_pool  <- sqrt(((length(a) - 1) * sd_a^2 + (length(b) - 1) * sd_b^2)/
df_pool)
t   <- mean_diff / (sd_pool * sqrt(1/length(a) + 1/length(b)))
p   <- 2*pt(-abs(t), df = df_pool)
result <- c(mean_diff, se_pool, t, p, mean(a), mean(b))
names(result) <- c("Difference of means",  "t", "p-value","Mean A","Mean B")
library(magrittr)
library(ggthemes)
library(ggplot2)
source("sim_utils.R")
set.seed(2600)
n_birds <- 150
genes <- 100
n_islands <- 4
galapagos_birds <- purrr::map(.f = function(x) generate_pop(n_pop=n_birds,
n_genes = x),
.x = runif(n=n_islands,80,genes) %>% ceiling) %>%
unlist %>% matrix(nrow=n_birds,byrow=F) %>%
data.frame
names(galapagos_birds) <- c("A","B","C","D")
my_alpha <- 0.4
my_bins <- 80
ggplot(data=galapagos_birds,aes(x=A))+
geom_histogram(alpha=my_alpha,bins = my_bins)+
geom_histogram(data=galapagos_birds,aes(x=B),fill="dark blue",
alpha=my_alpha,bins = my_bins)+
geom_histogram(data=galapagos_birds,aes(x=C),fill="dark red",
alpha=my_alpha,bins = my_bins)+
geom_histogram(data=galapagos_birds,aes(x=D),fill="dark green",
alpha=my_alpha,bins = my_bins)+
xlab("Beak size")+ylab("Count")+
ggtitle("Darwin's Finches",subtitle = "4 samples from 4 islands")+
theme_economist_white(gray_bg = F)
#ggsave(file="finches2.png",type="cairo-png",units="cm",
#       height=8,width = 15)
my_alpha <- 0.4
my_bins <- 80
ggplot(data=galapagos_birds,aes(x=A))+
geom_histogram(alpha=my_alpha,bins = my_bins)+
geom_histogram(data=galapagos_birds,aes(x=B),fill="dark blue",
alpha=my_alpha,bins = my_bins)+
xlab("Beak size")+ylab("Count")+
ggtitle("Darwin's Finches",subtitle = "Samples A and B")+
theme_economist_white(gray_bg = F)
ggplot(data=galapagos_birds,aes(x=A))+
geom_histogram(alpha=my_alpha,bins = my_bins)+
geom_histogram(data=galapagos_birds,aes(x=B),fill="dark blue",
alpha=my_alpha,bins = my_bins)+
geom_histogram(data=galapagos_birds,aes(x=C),fill="dark red",
alpha=my_alpha,bins = my_bins)+
geom_histogram(data=galapagos_birds,aes(x=D),fill="dark green",
alpha=my_alpha,bins = my_bins)+
xlab("Beak size")+ylab("Count")+
ggtitle("Darwin's Finches",subtitle = "4 samples from 4 islands")+
theme_economist_white(gray_bg = F)
library(ggplot2)
schoolA = c(-46.642902,-23.610586)
## Escola Municipal de Ensino Fundamental Parque das Flores
schoolB = c(-46.636747,-23.608101)
## Sample lat and lon
sim_df2 <- data.frame(group = c(rep('A',40),rep('B',40),rep('C',40)))
sim_df2$lat[1:40] <- rnorm(n=40,mean=schoolA[2],sd=.003)
sim_df2$lon[1:40] <- rnorm(n=40,mean=schoolA[1],sd=.003)
sim_df2$lat[41:80] <- rnorm(n=40,mean=schoolB[2],sd=.003)
sim_df2$lon[41:80] <- rnorm(n=40,mean=schoolB[1],sd=.003)
sim_df2$lat[81:120] <- rnorm(n=40,mean=schoolC[2],sd=.003)
sim_df2$lon[81:120] <- rnorm(n=40,mean=schoolC[1],sd=.003)
# Three centers
## Escola Municipal de Ensino Fundamental Parque das Flores
schoolA <- c(-46.642902,-23.610586)
## Escola Municipal Jean Mermoz
schoolB <- c(-46.636747,-23.608101)
## EMEI PAULO ALVES, TTE.
schoolC <- c(-46.633597,-23.605939)
## Sample lat and lon
sim_df2 <- data.frame(group = c(rep('A',40),rep('B',40),rep('C',40)))
sim_df2$lat[1:40] <- rnorm(n=40,mean=schoolA[2],sd=.003)
sim_df2$lon[1:40] <- rnorm(n=40,mean=schoolA[1],sd=.003)
sim_df2$lat[41:80] <- rnorm(n=40,mean=schoolB[2],sd=.003)
sim_df2$lon[41:80] <- rnorm(n=40,mean=schoolB[1],sd=.003)
sim_df2$lat[81:120] <- rnorm(n=40,mean=schoolC[2],sd=.003)
sim_df2$lon[81:120] <- rnorm(n=40,mean=schoolC[1],sd=.003)
## Sample executive functioning
sim_df2$dist[1:40] = spDistsN1(pts=cbind(sim_df2$lon[1:40],sim_df2$lat[1:40]),
pt = schoolA,longlat=T)
library(sp)
## Sample executive functioning
sim_df2$dist[1:40] = spDistsN1(pts=cbind(sim_df2$lon[1:40],sim_df2$lat[1:40]),
pt = schoolA,longlat=T)
sim_df2$dist[41:80] = spDistsN1(pts=cbind(sim_df2$lon[41:80],sim_df2$lat[41:80]),
pt = schoolB,longlat=T)
sim_df2$dist[81:120] = spDistsN1(pts=cbind(sim_df2$lon[81:120],sim_df2$lat[81:120]),
pt = schoolB,longlat=T)
sim_df2$exc_func[1:40] <- sim_df2$dist[1:40]*.5 + 1 + rnorm(40,0,.1)
sim_df2$exc_func[41:80] <- sim_df2$dist[41:80]*.5 + 2 + rnorm(40,0,.1)
sim_df2$exc_func[81:120] <- sim_df2$dist[81:120]*.5 + 3 + rnorm(40,0,.1)
ggplot(sim_df2,aes(x=lat,y=lon,color=group)) + geom_point()
school_mat <- rbind(schoolA,schoolB,schoolC)
colnames(school_mat) <- c("lat","lon")
View(school_mat)
View(sim_df2)
school_mat <- rbind(schoolA,schoolB,schoolC)
colnames(school_mat) <- c("lat","lon")
# Min. Distance
min_dists <- min_dist(coords = sim_df2[,c("lon","lat")],
targets = school_mat)
source("public_min_dist.R")
# Min. Distance
min_dists <- min_dist(coords = sim_df2[,c("lon","lat")],
targets = school_mat)
min_dist()
min_dists
cor.test(min_dists,sim_df2$exc_func)
# Nearest place
nearplace(coords = sim_df2[,c("lon","lat")],
targets = school_mat,
target_label = "group")
source("public_nearplace.R")
# Nearest place
nearplace(coords = sim_df2[,c("lon","lat")],
targets = school_mat,
target_label = "group")
library(haven)
library(ggthemes)
library(lme4)
library(magrittr)
library(rgdal)
library(OpenStreetMap)
library(ggplot2)
source("../R/public_get_addr.R") # line 14
source("../R/public_nearplace.R")
source("../R/public_geopart.R") # line 32
source("../R/public_min_dist.R") # line 39
# Ficticious School positions
-46.69468 -23.56535
school_points <- rbind(
c(-46.643324,-23.598420),
c(-46.653398,-23.598430),
c(-46.663394,-23.598450),
rbind(get_addr("Avenida Brigadeiro Faria Lima, São Paulo") %>% as.numeric)) %>%
data.frame(.,names=c("A","B","C","D"))
school_points
colnames(school_points) <- c("lon","lat","names")
school_points
school_mat
?rbind
school_mat <- rbind(schoolA,schoolB,schoolC,make.row.names=T)
school_mat
school_mat <- rbind(schoolA,schoolB,schoolC,make.row.names=F)
school_mat
class(school_points)
school_mat <- as.data.frame(schoolA,schoolB,schoolC)
school_mat
school_mat <- as.data.frame(rbind(schoolA,schoolB,schoolC))
school_mat
colnames(school_mat) <- c("lat","lon")
school_mat
class(school_mat)
# Nearest place
nearplace(coords = sim_df2[,c("lon","lat")],
targets = school_mat,
target_label = "group")
ggplot(sim_df2,aes(x=lat,y=lon,color=group)) + geom_point()
school_mat <- as.data.frame(rbind(schoolA,schoolB,schoolC))
colnames(school_mat) <- c("lat","lon")
# Min. Distance
min_dists <- min_dist(coords = sim_df2[,c("lon","lat")],
targets = school_mat)
cor.test(min_dists,sim_df2$exc_func)
# Nearest place
nearplace(coords = sim_df2[,c("lon","lat")],
targets = school_mat,
target_label = "group")
View(sim_df2)
# Data
inpd_df<- read.csv2("../data/data-cross-lab.csv")
addr_df <- haven::read_spss("../data/geo_HRC.sav")
renda_df <- haven::read_spss("../data/Banco Renda - Merged alternativo-w0-w1 030518.sav")
addrw0_df <- addr_df[(addr_df$redcap_event_name=="wave0_arm_1"),]
w0_compl_df <- addrw0_df[complete.cases(addrw0_df[,c("lat","lon")]),]
inpd_df <- inpd_df[,c("subjectid","JAP_EF","ZJAP_EF")]
sample_coords <- w0_compl_df[,c("lon","lat")]
setor_sens <- readOGR("../data/setor censitario", # directory name
layer="DEINFO_SETOR_CENSITARIO_2010") #.shp filename
# Testing partitioning function
part_data <- geopart(shape_file=setor_sens,
dataset=w0_compl_df[-c(1:1253),]) # SP cases
test_data <- dplyr::left_join(inpd_df,part_data,by="subjectid")
test_data <- test_data[complete.cases(test_data),]
# Testing closest distance
test_data$min_school <- min_dist(coords=test_data[,c("lon","lat")],
targets=school_points)
# Closest school group level
test_data$nearplace <- nearplace(coords=test_data[,c("lon","lat")],
targets=school_points)
nearplace(coords=test_data[,c("lon","lat")],
targets=school_points)
school_mat
school_points
school_points %>% remove_rownames %>% column_to_rownames(var="names")
sschool_points
school_points
school_points %>% remove_rownames %>% column_to_rownames(var="names")
library(sp)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
school_points %>% remove_rownames %>% column_to_rownames(var="names")
View(iris)
iris[,-1]
school_mat <- data.frame(school_mat[,-1],
row.names=school_mat[,1])
school_mat
school_mat <- as.data.frame(rbind(schoolA,schoolB,schoolC))
colnames(school_mat) <- c("lat","lon")
school_mat
rownames(school_mat)
school_mat$names <- rownames(school_mat)
school_mat$names
# Nearest place
nearplace(coords = sim_df2[,c("lon","lat")],
targets = school_mat,
target_label = "names")
